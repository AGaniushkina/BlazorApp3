@page "/test"
@using System.ComponentModel.DataAnnotations
@using Smart.Blazor;

<h1>Purchase</h1>
<div class="form-main-menu page-form-main-menu">
    <ul class="ul-form-main-menu">
        <li class="li-form-main-menu" role="tab">Purchase</li>
        <li class="li-form-main-menu" role="tab">My booking</li>

    </ul>

<EditForm Model="@Model" OnValidSubmit="@Submit">
    <DataAnnotationsValidator />
    <ValidationSummary /> 
 <div>
     <p>
        From:<br />

                <DropDownList DataSource="@directions" Filterable="true" @bind-SelectedValues="@selectedItemsFrom" OnItemClick="OnItemClickFrom"></DropDownList>      
    </p>
    <p>
        To:<br />
                <DropDownList DataSource="@directions" Filterable="true" @bind-SelectedValues="@selectedItemsTo" OnItemClick="OnItemClickTo"></DropDownList> 
    </p>
    <p>
        Departing:<br />
        <InputDate @bind-Value="Model!.Departing" />
    </p>
    <p>
        Returning:<br />
        <InputDate @bind-Value="Model!.Returning" />
    </p>
    <p>
        Passengers Count:<br />
        <InputNumber @bind-Value="Model!.PassengersCount" />
    </p>
   
 </div>

    <button type="submit">Submit</button>
</EditForm>

<hr />
<div>
    <p>From: @Model!.DirectionFrom</p>
    <p>To: @Model!.DirectionTo</p>
    <p>Departing: @Model!.Departing</p>
    <p>Returning: @Model!.Returning</p>
    <p>Passengers Count: @Model!.PassengersCount</p>
</div>
</div>
@code {
    public Flight2? Model { get; set; }

    protected override void OnInitialized() => Model ??= new();

    private void Submit()
    {
        //Logger.LogInformation("Id = {Id}", Model?.Id);
    }

    //public class Starship
    //{
    //    [Required]
    //    [StringLength(10, ErrorMessage = "Id is too long.")]
    //    public string? Id { get; set; }
    //}
    public class Flight2
    {
        [Required]
        [StringLength(100, ErrorMessage = "String is too long.")]
        public string? DirectionFrom { get; set; } = "";
        public string? DirectionTo { get; set; } = "";
        public DateTime Departing { get; set; } = DateTime.Now;
        public DateTime Returning { get; set; } = DateTime.Now.AddHours(24);
        public int PassengersCount { get; set; } = 1;

    }

    //in a real case, the model is usually in a separate file
    // //the model type and value field type must be provided to the dropdpownlist
    // public class MyDdlModel
    // {
    //     public int MyValueField { get; set; }
    //     public string MyTextField { get; set; }
    // }

    // int selectedValue { get; set; } = 1;

    // IEnumerable<MyDdlModel> myDdlData = Enumerable.Range(1, 20).Select(x => new MyDdlModel { MyTextField = "item " + x, MyValueField = x });

    string[] directions = new string[] { "Moscow, Russia", "Saratov, Russia", "Samara, Russia" };

    string[] selectedItemsFrom = new string[] { };
    string[] selectedItemsTo = new string[] { };

    private void OnItemClickFrom(Event ev)
    {
        DropDownListItemClickEventDetail detail = ev["Detail"];
        Model!.DirectionFrom = selectedItemsFrom[0];
    }

    private void OnItemClickTo(Event ev)
    {
        DropDownListItemClickEventDetail detail = ev["Detail"];
        Model!.DirectionTo = selectedItemsTo[0];
    }
}
