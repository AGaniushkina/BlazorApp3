@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components.Forms
@using Smart.Blazor;
@using BlazorApp2.Shared;
@using Newtonsoft.Json;
@using BlazorApp2.Client.Components;
@inject HttpClient client;


<style>
	.basic-input {
		width: 100%;
	}

		.basic-input + .basic-input {
			margin-top: 10px;
		}

	.options-container {
		display: flex;
		flex-direction: column;
	}

	.container {
		display: flex;
		padding: 5px;
	}

	.info-text {
		margin-bottom: 5px;
		margin-top: 3px;
	}
</style>

<div class="booking-container">
	<h3>Бронирование рейса @Flight?.FlightNumber (@Flight?.Price руб.)</h3>
	<p class="info-text">
		Пожалуйста, введите данные латинскими буквами
	</p>
	
	<div class="container">
		<InputText 
			@bind-Value= "Model!.LastName"
			Style="margin: 10px;" 
			class="basic-input" 
			Placeholder="Фамилия" />
		<InputText 
			@bind-Value="Model!.FirstName" 
			Style="margin: 10px;" 
			class="basic-input" 
			Placeholder="Имя" />
		<InputText 
			@bind-Value="Model!.Patronymic"
			Style="margin: 10px;"
			class="basic-input"
			Placeholder="Отчество" />
	</div>
	<div class="container">
		<div class="options-container">
		<RadioButton 
			Name="sexs" OnCheckValue="OnRadioButtonCheckValueM"
		>Мужской</RadioButton>
		<RadioButton 
			Name="sexs" OnCheckValue="OnRadioButtonCheckValueF"
		>Женский</RadioButton>
		</div>
	</div>
	<p class="info-text">Информация о паспорте</p>
	<div class="container">
	<DateInput @bind-Value="Model!.DateOfIssue" Style=" margin: 10px;" Class="basic-input" />
	<Input 
			@bind-Value="Model!.DocumentSeriesAndNumber" class=" basic-input" Placeholder="Серия и номер" />
	</div>
	<p class="info-text">Контактные данные для заказа</p>
	<div class="container">
			<InputText 
				@bind-Value="Model!.Email" 
				Style="margin: 10px;" class="basic-input" Placeholder="Почта" />
			<InputText 
				@bind-Value="Model!.PhoneNumber"
				   Style="margin: 10px;" class="basic-input" Placeholder="Номер телефона" />
	</div>
	
	<Button style="display: flex; justify-content: flex-end;"
			Class="primary outlined small" OnClick="@BookFlights">
		Забронировать
	</Button>
	
</div>


@code {
	[Parameter]
	public Flight? Flight { get; set; }

	public Passenger? Model { get; set; } = new();

	private List<Passenger> Passengers = new List<Passenger>();

	private PassengerFlight? Flights { get; set; } = new();

	protected override async Task OnInitializedAsync()
	{
		var request = new HttpRequestMessage
			{
				Method = HttpMethod.Get,
				RequestUri = new Uri("https://localhost:7123/api/passengers")
			};

		using (var response = await client.SendAsync(request))
		{
			response.EnsureSuccessStatusCode();
			var body = await response.Content.ReadAsStringAsync();
			if (body != null)
				Passengers = JsonConvert.DeserializeObject<IEnumerable<Passenger>>(body).ToList();
		}	
	}

	private void OnRadioButtonCheckValueM(Event ev) => Model!.Sex = "Male";
	private void OnRadioButtonCheckValueF(Event ev) => Model!.Sex = "Female";

	//    private void Submit()
	// {
	// //Logger.LogInformation("Id = {Id}", Model?.Id);
	// }

	private async Task BookFlights()
	{
		var request = new HttpRequestMessage
			{
				Method = HttpMethod.Get,
				RequestUri = new Uri("https://localhost:7123/api/passengers/all")
			};

		using (var response = await client.SendAsync(request))
		{
			response.EnsureSuccessStatusCode();
			var body = await response.Content.ReadAsStringAsync();
			if (body != null)
				Passengers = JsonConvert.DeserializeObject<IEnumerable<Passenger>>(body).ToList();
		}	

		string? flightId = Flight?.Id;

		string? passengerId = Passengers.Where(r => r.Email == Model!.Email
								&& r.DocumentSeriesAndNumber == Model!.DocumentSeriesAndNumber)
								.Select(r => r.Id).SingleOrDefault();

		if (passengerId == null)
		{

		}

		Flights = new PassengerFlight(passengerId, flightId, Flight);

		var requestPassenger = new HttpRequestMessage
			{
				Method = HttpMethod.Post,
				RequestUri = new Uri($"https://localhost:7123/api/passengerflights?newPassengerFlight=Flights")
			};
		using (var response = await client.SendAsync(requestPassenger))
		{
			response.EnsureSuccessStatusCode();

		}


	}
}